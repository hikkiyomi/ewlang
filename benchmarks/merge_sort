function mergeSort(arr, l, r) {
    if (r - l == 1) {
        array temp[1];
        temp[0] = arr[l];

        return temp;
    }

    mid = (l + r) / 2;
    left = mergeSort(arr, l, mid);
    right = mergeSort(arr, mid, r);

    array result[r - l];
    li, ri = 0, 0;
    current = 0;

    while ((li < len(left)) || (ri < len(right))) {
        if (li == len(left)) {
            result[current] = right[ri];
            ri = ri + 1;
        } else {
            if (ri == len(right)) {
                result[current] = left[li];
                li = li + 1;
            } else {
                if (left[li] < right[ri]) {
                    result[current] = left[li];
                    li = li + 1;
                } else {
                    result[current] = right[ri];
                    ri = ri + 1;
                }
            }
        }

        current = current + 1;
    }

    return result;
}

function entrypoint() {
    array a[5];

    for (i = len(a); i > 0; i = i - 1) {
        a[5 - i] = i;
    }

    print a;
    print mergeSort(a, 0, len(a));
}
